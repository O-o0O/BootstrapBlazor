@namespace BootstrapBlazor.Components
@inherits BootstrapComponentBase
@typeparam TValue

<Tree ShowCheckbox="false" Items="Items" ActiveItem="@ActiveItem" OnTreeItemClick="@OnTreeItemClick" />

@code {
    [Parameter]
    public TValue? Value { get; set; }

    [Parameter]
    public List<TreeItem>? Items { get; set; }

    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }

    [Parameter]
    public bool showCheckBox { get; set; }

    protected TValue? CurrentValue
    {
        get => Value;
        set
        {
            var hasChanged = !EqualityComparer<TValue>.Default.Equals(value, Value);
            if (hasChanged)
            {
                Value = value;
                _ = ValueChanged.InvokeAsync(value);
            }
        }
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        ActiveItem = Items?.FirstOrDefault(i => i.Text == CurrentValue?.ToString());
    }

    private TreeItem? ActiveItem { get; set; }

    private Task OnTreeItemClick(TreeItem item)
    {
        ActiveItem = item;
        CurrentValue = (TValue?)(object?)item.Text;
        return Task.CompletedTask;
    }
}
